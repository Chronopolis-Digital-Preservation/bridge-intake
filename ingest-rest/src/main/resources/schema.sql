-- HSQL Schema

DROP TABLE IF EXISTS users;
create table users (
   username varchar(256),
   password varchar(256),
   enabled boolean
);

DROP TABLE IF EXISTS authorities;
create table authorities (
  username varchar(256),
  authority varchar(256)
);

DROP TABLE IF EXISTS bag CASCADE;
CREATE TABLE bag (
  id bigint generated by DEFAULT as IDENTITY (start WITH 1),
  name VARCHAR(255),
  depositor VARCHAR(255),
  location VARCHAR(255),
  token_location VARCHAR(255),
  token_digest VARCHAR(255),
  tag_manifest_digest VARCHAR(255),
  status VARCHAR(255),
  fixity_algorithm VARCHAR(255),
  size bigint not null,
  total_files bigint not null,
  required_replications int,
  PRIMARY KEY (id)
);

DROP TABLE IF EXISTS node CASCADE;
create table node (
  id bigint generated by DEFAULT as IDENTITY (start WITH 1),
  enabled boolean,
  password VARCHAR(255),
  username VARCHAR(255),
  PRIMARY KEY (id)
);

DROP TABLE IF EXISTS replication;
CREATE TABLE replication (
  id bigint generated by DEFAULT as IDENTITY (start WITH 1),
  status VARCHAR (255),
  bag_link VARCHAR (255),
  token_link VARCHAR (255),
  protocol VARCHAR (255),
  received_tag_fixity VARCHAR (255),
  received_token_fixity VARCHAR (255),
  bag_id bigint,
  node_id bigint,
  PRIMARY KEY (id)
);

DROP TABLE IF EXISTS restoration;
CREATE TABLE restoration (
  restoration_id bigint generated by DEFAULT as IDENTITY (start WITH 1),
  depositor VARCHAR (255),
  link VARCHAR (255),
  name VARCHAR (255),
  protocol VARCHAR (255),
  status VARCHAR (255),
  node_id bigint,
  PRIMARY KEY (restoration_id)
);

DROP TABLE IF EXISTS ace_token;
CREATE TABLE ace_token (
  id bigint generated by DEFAULT as IDENTITY (start WITH 1),
  create_date TIMESTAMP,
  filename VARCHAR (255),
  proof VARCHAR (1024),
  ims_service VARCHAR (255),
  algorithm VARCHAR (255),
  round bigint,
  bag bigint,
  PRIMARY KEY (id)
);

DROP TABLE IF EXISTS bag_replications;
CREATE TABLE bag_replications (
  bag_id bigint,
  node_id bigint
);

ALTER TABLE replication
  ADD CONSTRAINT FK_repl_bag FOREIGN KEY (bag_id) REFERENCES bag;

ALTER TABLE replication
  ADD CONSTRAINT FK_repl_node FOREIGN KEY (node_id) REFERENCES node;

ALTER TABLE restoration
  ADD CONSTRAINT FK_rest_node FOREIGN KEY (node_id) REFERENCES node;

ALTER TABLE ace_token
  ADD CONSTRAINT FK_token_bag FOREIGN KEY (bag) REFERENCES bag;

ALTER TABLE bag_replications
  ADD CONSTRAINT FK_br_bag FOREIGN KEY (bag_id) REFERENCES bag;

ALTER TABLE bag_replications
  ADD CONSTRAINT FK_br_node FOREIGN KEY (node_id) REFERENCES node;
